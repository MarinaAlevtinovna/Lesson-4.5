# Разработать консольную игру "Битва героев" на Python с использованием классов и
# разработать план проекта по этапам/или создать kanban доску для работы над данным проектом
#Общее описание:
#Создайте простую текстовую боевую игру, где игрок и компьютер управляют героями с различными
# характеристиками. Игра состоит из раундов, в каждом раунде игроки по очереди наносят урон друг другу,
# пока у одного из героев не закончится здоровье.

# Класс `Hero`:
# - Атрибуты:
# - Имя (`name`)
# - Здоровье (`health`), начальное значение 100
# - Сила удара (`attack_power`), начальное значение 20
# - Методы:
# - `attack(other)`: атакует другого героя (`other`), отнимая здоровье в размере своей силы удара
# # - `is_alive()`: возвращает `True`, если здоровье героя больше 0, иначе `False`
# Класс `Game`:
# - Атрибуты:
# - Игрок (`player`), экземпляр класса `Hero`
# - Компьютер (`computer`), экземпляр класса `Hero`
# - Методы:
# - `start()`: начинает игру, чередует ходы игрока и компьютера, пока один из героев не умрет.
# Выводит информацию о каждом ходе (кто атаковал и сколько здоровья осталось у противника) и объявляет победителя.

class Hero():
    def __init__(self, name, health=100, attack_power=20):
        self.name = name
        self.health = health
        self.attack_power = attack_power

    def attack(self):
        if self.attack_power > 0:
            print(f'{self.name} атакует')
            self.attack_power -= 2
            self.health -= 1
            print(f'Сила удара - {self.attack_power}')
        else:
            print(f'{self.name} обессилен')


    def is_alive(self):
        if self.health > 0:
            pass
        else:
            print(f'{self.name} мертв')

hero = Hero("Витязь", 100, 20)

hero.attack()
hero.attack()
hero.attack()
hero.is_alive()